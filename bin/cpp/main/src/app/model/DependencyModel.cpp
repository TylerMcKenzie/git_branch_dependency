// Generated by Haxe 3.4.7
#include <hxcpp.h>

#ifndef INCLUDED_Reflect
#include <Reflect.h>
#endif
#ifndef INCLUDED_StringTools
#include <StringTools.h>
#endif
#ifndef INCLUDED_app_model_DependencyModel
#include <app/model/DependencyModel.h>
#endif
#ifndef INCLUDED_haxe_format_JsonParser
#include <haxe/format/JsonParser.h>
#endif
#ifndef INCLUDED_haxe_format_JsonPrinter
#include <haxe/format/JsonPrinter.h>
#endif
#ifndef INCLUDED_haxe_io_Bytes
#include <haxe/io/Bytes.h>
#endif
#ifndef INCLUDED_haxe_io_Input
#include <haxe/io/Input.h>
#endif
#ifndef INCLUDED_sys_FileSystem
#include <sys/FileSystem.h>
#endif
#ifndef INCLUDED_sys_io_File
#include <sys/io/File.h>
#endif
#ifndef INCLUDED_sys_io_Process
#include <sys/io/Process.h>
#endif

HX_DEFINE_STACK_FRAME(_hx_pos_a8c2a3b9c8fe0cf3_14_new,"app.model.DependencyModel","new",0xa0650f5e,"app.model.DependencyModel.new","app/model/DependencyModel.hx",14,0xcfa8d514)
HX_LOCAL_STACK_FRAME(_hx_pos_a8c2a3b9c8fe0cf3_36_save,"app.model.DependencyModel","save",0xbb536a7f,"app.model.DependencyModel.save","app/model/DependencyModel.hx",36,0xcfa8d514)
HX_LOCAL_STACK_FRAME(_hx_pos_a8c2a3b9c8fe0cf3_41_getDependencies,"app.model.DependencyModel","getDependencies",0x9825ed9d,"app.model.DependencyModel.getDependencies","app/model/DependencyModel.hx",41,0xcfa8d514)
HX_LOCAL_STACK_FRAME(_hx_pos_a8c2a3b9c8fe0cf3_46_addDependency,"app.model.DependencyModel","addDependency",0x7b0b88ca,"app.model.DependencyModel.addDependency","app/model/DependencyModel.hx",46,0xcfa8d514)
HX_LOCAL_STACK_FRAME(_hx_pos_a8c2a3b9c8fe0cf3_55_removeDependency,"app.model.DependencyModel","removeDependency",0x5beaee71,"app.model.DependencyModel.removeDependency","app/model/DependencyModel.hx",55,0xcfa8d514)
HX_LOCAL_STACK_FRAME(_hx_pos_a8c2a3b9c8fe0cf3_64_loadDependencies,"app.model.DependencyModel","loadDependencies",0x241d1571,"app.model.DependencyModel.loadDependencies","app/model/DependencyModel.hx",64,0xcfa8d514)
HX_LOCAL_STACK_FRAME(_hx_pos_a8c2a3b9c8fe0cf3_82_loadDependencyGraph,"app.model.DependencyModel","loadDependencyGraph",0xd7804bfb,"app.model.DependencyModel.loadDependencyGraph","app/model/DependencyModel.hx",82,0xcfa8d514)
HX_LOCAL_STACK_FRAME(_hx_pos_a8c2a3b9c8fe0cf3_93_getRootDirectory,"app.model.DependencyModel","getRootDirectory",0xbb9873b7,"app.model.DependencyModel.getRootDirectory","app/model/DependencyModel.hx",93,0xcfa8d514)
static const ::String _hx_array_data_275ec86c_8[] = {
	HX_("rev-parse",89,52,b1,66),HX_("--show-toplevel",ff,07,73,f8),
};
namespace app{
namespace model{

void DependencyModel_obj::__construct(){
            	HX_STACKFRAME(&_hx_pos_a8c2a3b9c8fe0cf3_14_new)
HXLINE(  21)		this->dependencyGraph = null();
HXLINE(  19)		this->dependencies = null();
HXLINE(  17)		this->currentBranch = null();
HXLINE(  15)		this->JSON_FILE = HX_("git-dep.json",02,a8,e8,cf);
HXLINE(  25)		::String root = this->getRootDirectory();
HXLINE(  27)		if ((root.length > (int)0)) {
HXLINE(  28)			this->JSON_FILE = ((root + HX_("/.git/",7c,b0,99,8b)) + this->JSON_FILE);
            		}
HXLINE(  31)		this->loadDependencyGraph();
            	}

Dynamic DependencyModel_obj::__CreateEmpty() { return new DependencyModel_obj; }

void *DependencyModel_obj::_hx_vtable = 0;

Dynamic DependencyModel_obj::__Create(hx::DynamicArray inArgs)
{
	hx::ObjectPtr< DependencyModel_obj > _hx_result = new DependencyModel_obj();
	_hx_result->__construct();
	return _hx_result;
}

bool DependencyModel_obj::_hx_isInstanceOf(int inClassId) {
	return inClassId==(int)0x00000001 || inClassId==(int)0x0fb17296;
}

void DependencyModel_obj::save(){
            	HX_STACKFRAME(&_hx_pos_a8c2a3b9c8fe0cf3_36_save)
HXDLIN(  36)		::String _hx_tmp = this->JSON_FILE;
HXDLIN(  36)		::sys::io::File_obj::saveContent(_hx_tmp,::haxe::format::JsonPrinter_obj::print(this->dependencyGraph,null(),null()));
            	}


HX_DEFINE_DYNAMIC_FUNC0(DependencyModel_obj,save,(void))

::Array< ::String > DependencyModel_obj::getDependencies(){
            	HX_STACKFRAME(&_hx_pos_a8c2a3b9c8fe0cf3_41_getDependencies)
HXDLIN(  41)		return this->dependencies;
            	}


HX_DEFINE_DYNAMIC_FUNC0(DependencyModel_obj,getDependencies,return )

bool DependencyModel_obj::addDependency(::String dependency){
            	HX_STACKFRAME(&_hx_pos_a8c2a3b9c8fe0cf3_46_addDependency)
HXDLIN(  46)		if ((this->dependencies->indexOf(dependency,null()) == (int)-1)) {
HXLINE(  47)			this->dependencies->push(dependency);
HXLINE(  48)			return true;
            		}
            		else {
HXLINE(  50)			return false;
            		}
HXLINE(  46)		return false;
            	}


HX_DEFINE_DYNAMIC_FUNC1(DependencyModel_obj,addDependency,return )

bool DependencyModel_obj::removeDependency(::String dependency){
            	HX_STACKFRAME(&_hx_pos_a8c2a3b9c8fe0cf3_55_removeDependency)
HXLINE(  56)		if ((this->dependencies->indexOf(dependency,null()) != (int)-1)) {
HXLINE(  57)			return this->dependencies->remove(dependency);
            		}
HXLINE(  60)		return false;
            	}


HX_DEFINE_DYNAMIC_FUNC1(DependencyModel_obj,removeDependency,return )

void DependencyModel_obj::loadDependencies(::String branch){
            	HX_STACKFRAME(&_hx_pos_a8c2a3b9c8fe0cf3_64_loadDependencies)
HXLINE(  65)		if ((branch.length == (int)0)) {
HXLINE(  66)			HX_STACK_DO_THROW(HX_("A branch is required to be loaded.",67,b0,01,86));
            		}
HXLINE(  69)		if (::Reflect_obj::hasField(this->dependencyGraph,branch)) {
HXLINE(  70)			this->dependencies = ( (::Array< ::String >)(::Reflect_obj::field(this->dependencyGraph,branch)->__Field(HX_("deps",c4,5b,66,42),hx::paccDynamic)) );
HXLINE(  71)			this->currentBranch = branch;
            		}
            		else {
HXLINE(  73)			{
HXLINE(  73)				 ::Dynamic value =  ::Dynamic(hx::Anon_obj::Create(1)
            					->setFixed(0,HX_("deps",c4,5b,66,42),::Array_obj< ::String >::__new(0)));
HXDLIN(  73)				::Reflect_obj::setField(this->dependencyGraph,branch,value);
            			}
HXLINE(  74)			this->dependencies = ( (::Array< ::String >)(::Reflect_obj::field(this->dependencyGraph,branch)->__Field(HX_("deps",c4,5b,66,42),hx::paccDynamic)) );
HXLINE(  75)			this->currentBranch = branch;
HXLINE(  76)			this->save();
            		}
            	}


HX_DEFINE_DYNAMIC_FUNC1(DependencyModel_obj,loadDependencies,(void))

void DependencyModel_obj::loadDependencyGraph(){
            	HX_GC_STACKFRAME(&_hx_pos_a8c2a3b9c8fe0cf3_82_loadDependencyGraph)
HXDLIN(  82)		if (::sys::FileSystem_obj::exists(this->JSON_FILE)) {
HXLINE(  83)			 ::Dynamic fileDependencies =  ::haxe::format::JsonParser_obj::__alloc( HX_CTX ,::sys::io::File_obj::getContent(this->JSON_FILE))->parseRec();
HXLINE(  84)			this->dependencyGraph = fileDependencies;
            		}
            		else {
HXLINE(  86)			this->dependencyGraph =  ::Dynamic(hx::Anon_obj::Create(0));
HXLINE(  87)			this->save();
            		}
            	}


HX_DEFINE_DYNAMIC_FUNC0(DependencyModel_obj,loadDependencyGraph,(void))

::String DependencyModel_obj::getRootDirectory(){
            	HX_GC_STACKFRAME(&_hx_pos_a8c2a3b9c8fe0cf3_93_getRootDirectory)
HXDLIN(  93)		return ::StringTools_obj::trim( ::sys::io::Process_obj::__alloc( HX_CTX ,HX_("git",12,84,4e,00),::Array_obj< ::String >::fromData( _hx_array_data_275ec86c_8,2))->_hx_stdout->readAll(null())->toString());
            	}


HX_DEFINE_DYNAMIC_FUNC0(DependencyModel_obj,getRootDirectory,return )


hx::ObjectPtr< DependencyModel_obj > DependencyModel_obj::__new() {
	hx::ObjectPtr< DependencyModel_obj > __this = new DependencyModel_obj();
	__this->__construct();
	return __this;
}

hx::ObjectPtr< DependencyModel_obj > DependencyModel_obj::__alloc(hx::Ctx *_hx_ctx) {
	DependencyModel_obj *__this = (DependencyModel_obj*)(hx::Ctx::alloc(_hx_ctx, sizeof(DependencyModel_obj), true, "app.model.DependencyModel"));
	*(void **)__this = DependencyModel_obj::_hx_vtable;
	__this->__construct();
	return __this;
}

DependencyModel_obj::DependencyModel_obj()
{
}

void DependencyModel_obj::__Mark(HX_MARK_PARAMS)
{
	HX_MARK_BEGIN_CLASS(DependencyModel);
	HX_MARK_MEMBER_NAME(JSON_FILE,"JSON_FILE");
	HX_MARK_MEMBER_NAME(currentBranch,"currentBranch");
	HX_MARK_MEMBER_NAME(dependencies,"dependencies");
	HX_MARK_MEMBER_NAME(dependencyGraph,"dependencyGraph");
	HX_MARK_END_CLASS();
}

void DependencyModel_obj::__Visit(HX_VISIT_PARAMS)
{
	HX_VISIT_MEMBER_NAME(JSON_FILE,"JSON_FILE");
	HX_VISIT_MEMBER_NAME(currentBranch,"currentBranch");
	HX_VISIT_MEMBER_NAME(dependencies,"dependencies");
	HX_VISIT_MEMBER_NAME(dependencyGraph,"dependencyGraph");
}

hx::Val DependencyModel_obj::__Field(const ::String &inName,hx::PropertyAccess inCallProp)
{
	switch(inName.length) {
	case 4:
		if (HX_FIELD_EQ(inName,"save") ) { return hx::Val( save_dyn() ); }
		break;
	case 9:
		if (HX_FIELD_EQ(inName,"JSON_FILE") ) { return hx::Val( JSON_FILE ); }
		break;
	case 12:
		if (HX_FIELD_EQ(inName,"dependencies") ) { return hx::Val( dependencies ); }
		break;
	case 13:
		if (HX_FIELD_EQ(inName,"currentBranch") ) { return hx::Val( currentBranch ); }
		if (HX_FIELD_EQ(inName,"addDependency") ) { return hx::Val( addDependency_dyn() ); }
		break;
	case 15:
		if (HX_FIELD_EQ(inName,"dependencyGraph") ) { return hx::Val( dependencyGraph ); }
		if (HX_FIELD_EQ(inName,"getDependencies") ) { return hx::Val( getDependencies_dyn() ); }
		break;
	case 16:
		if (HX_FIELD_EQ(inName,"removeDependency") ) { return hx::Val( removeDependency_dyn() ); }
		if (HX_FIELD_EQ(inName,"loadDependencies") ) { return hx::Val( loadDependencies_dyn() ); }
		if (HX_FIELD_EQ(inName,"getRootDirectory") ) { return hx::Val( getRootDirectory_dyn() ); }
		break;
	case 19:
		if (HX_FIELD_EQ(inName,"loadDependencyGraph") ) { return hx::Val( loadDependencyGraph_dyn() ); }
	}
	return super::__Field(inName,inCallProp);
}

hx::Val DependencyModel_obj::__SetField(const ::String &inName,const hx::Val &inValue,hx::PropertyAccess inCallProp)
{
	switch(inName.length) {
	case 9:
		if (HX_FIELD_EQ(inName,"JSON_FILE") ) { JSON_FILE=inValue.Cast< ::String >(); return inValue; }
		break;
	case 12:
		if (HX_FIELD_EQ(inName,"dependencies") ) { dependencies=inValue.Cast< ::Array< ::String > >(); return inValue; }
		break;
	case 13:
		if (HX_FIELD_EQ(inName,"currentBranch") ) { currentBranch=inValue.Cast< ::String >(); return inValue; }
		break;
	case 15:
		if (HX_FIELD_EQ(inName,"dependencyGraph") ) { dependencyGraph=inValue.Cast<  ::Dynamic >(); return inValue; }
	}
	return super::__SetField(inName,inValue,inCallProp);
}

void DependencyModel_obj::__GetFields(Array< ::String> &outFields)
{
	outFields->push(HX_HCSTRING("JSON_FILE","\x33","\xd7","\xa6","\x6b"));
	outFields->push(HX_HCSTRING("currentBranch","\xbb","\x7f","\x75","\xf6"));
	outFields->push(HX_HCSTRING("dependencies","\xe9","\xd3","\x48","\xac"));
	outFields->push(HX_HCSTRING("dependencyGraph","\x83","\xe8","\x10","\x62"));
	super::__GetFields(outFields);
};

#if HXCPP_SCRIPTABLE
static hx::StorageInfo DependencyModel_obj_sMemberStorageInfo[] = {
	{hx::fsString,(int)offsetof(DependencyModel_obj,JSON_FILE),HX_HCSTRING("JSON_FILE","\x33","\xd7","\xa6","\x6b")},
	{hx::fsString,(int)offsetof(DependencyModel_obj,currentBranch),HX_HCSTRING("currentBranch","\xbb","\x7f","\x75","\xf6")},
	{hx::fsObject /*Array< ::String >*/ ,(int)offsetof(DependencyModel_obj,dependencies),HX_HCSTRING("dependencies","\xe9","\xd3","\x48","\xac")},
	{hx::fsObject /*Dynamic*/ ,(int)offsetof(DependencyModel_obj,dependencyGraph),HX_HCSTRING("dependencyGraph","\x83","\xe8","\x10","\x62")},
	{ hx::fsUnknown, 0, null()}
};
static hx::StaticInfo *DependencyModel_obj_sStaticStorageInfo = 0;
#endif

static ::String DependencyModel_obj_sMemberFields[] = {
	HX_HCSTRING("JSON_FILE","\x33","\xd7","\xa6","\x6b"),
	HX_HCSTRING("currentBranch","\xbb","\x7f","\x75","\xf6"),
	HX_HCSTRING("dependencies","\xe9","\xd3","\x48","\xac"),
	HX_HCSTRING("dependencyGraph","\x83","\xe8","\x10","\x62"),
	HX_HCSTRING("save","\x3d","\x8b","\x4d","\x4c"),
	HX_HCSTRING("getDependencies","\x9f","\x29","\x33","\xcf"),
	HX_HCSTRING("addDependency","\x4c","\x60","\x12","\x01"),
	HX_HCSTRING("removeDependency","\x2f","\x34","\x72","\x50"),
	HX_HCSTRING("loadDependencies","\x2f","\x5b","\xa4","\x18"),
	HX_HCSTRING("loadDependencyGraph","\xfd","\xb0","\xa8","\x4a"),
	HX_HCSTRING("getRootDirectory","\x75","\xb9","\x1f","\xb0"),
	::String(null()) };

static void DependencyModel_obj_sMarkStatics(HX_MARK_PARAMS) {
	HX_MARK_MEMBER_NAME(DependencyModel_obj::__mClass,"__mClass");
};

#ifdef HXCPP_VISIT_ALLOCS
static void DependencyModel_obj_sVisitStatics(HX_VISIT_PARAMS) {
	HX_VISIT_MEMBER_NAME(DependencyModel_obj::__mClass,"__mClass");
};

#endif

hx::Class DependencyModel_obj::__mClass;

void DependencyModel_obj::__register()
{
	hx::Object *dummy = new DependencyModel_obj;
	DependencyModel_obj::_hx_vtable = *(void **)dummy;
	hx::Static(__mClass) = new hx::Class_obj();
	__mClass->mName = HX_HCSTRING("app.model.DependencyModel","\x6c","\xc8","\x5e","\x27");
	__mClass->mSuper = &super::__SGetClass();
	__mClass->mConstructEmpty = &__CreateEmpty;
	__mClass->mConstructArgs = &__Create;
	__mClass->mGetStaticField = &hx::Class_obj::GetNoStaticField;
	__mClass->mSetStaticField = &hx::Class_obj::SetNoStaticField;
	__mClass->mMarkFunc = DependencyModel_obj_sMarkStatics;
	__mClass->mStatics = hx::Class_obj::dupFunctions(0 /* sStaticFields */);
	__mClass->mMembers = hx::Class_obj::dupFunctions(DependencyModel_obj_sMemberFields);
	__mClass->mCanCast = hx::TCanCast< DependencyModel_obj >;
#ifdef HXCPP_VISIT_ALLOCS
	__mClass->mVisitFunc = DependencyModel_obj_sVisitStatics;
#endif
#ifdef HXCPP_SCRIPTABLE
	__mClass->mMemberStorageInfo = DependencyModel_obj_sMemberStorageInfo;
#endif
#ifdef HXCPP_SCRIPTABLE
	__mClass->mStaticStorageInfo = DependencyModel_obj_sStaticStorageInfo;
#endif
	hx::_hx_RegisterClass(__mClass->mName, __mClass);
}

} // end namespace app
} // end namespace model
