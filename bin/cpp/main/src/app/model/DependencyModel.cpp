// Generated by Haxe 4.0.0+ef18b627e
#include <hxcpp.h>

#ifndef INCLUDED_Reflect
#include <Reflect.h>
#endif
#ifndef INCLUDED_StringTools
#include <StringTools.h>
#endif
#ifndef INCLUDED_app_model_DependencyModel
#include <app/model/DependencyModel.h>
#endif
#ifndef INCLUDED_haxe_format_JsonParser
#include <haxe/format/JsonParser.h>
#endif
#ifndef INCLUDED_haxe_format_JsonPrinter
#include <haxe/format/JsonPrinter.h>
#endif
#ifndef INCLUDED_haxe_io_Bytes
#include <haxe/io/Bytes.h>
#endif
#ifndef INCLUDED_haxe_io_Input
#include <haxe/io/Input.h>
#endif
#ifndef INCLUDED_sys_FileSystem
#include <sys/FileSystem.h>
#endif
#ifndef INCLUDED_sys_io_File
#include <sys/io/File.h>
#endif
#ifndef INCLUDED_sys_io_Process
#include <sys/io/Process.h>
#endif

HX_DEFINE_STACK_FRAME(_hx_pos_a8c2a3b9c8fe0cf3_15_new,"app.model.DependencyModel","new",0xa0650f5e,"app.model.DependencyModel.new","app/model/DependencyModel.hx",15,0xcfa8d514)
HX_LOCAL_STACK_FRAME(_hx_pos_a8c2a3b9c8fe0cf3_37_save,"app.model.DependencyModel","save",0xbb536a7f,"app.model.DependencyModel.save","app/model/DependencyModel.hx",37,0xcfa8d514)
HX_LOCAL_STACK_FRAME(_hx_pos_a8c2a3b9c8fe0cf3_42_getDependencies,"app.model.DependencyModel","getDependencies",0x9825ed9d,"app.model.DependencyModel.getDependencies","app/model/DependencyModel.hx",42,0xcfa8d514)
HX_LOCAL_STACK_FRAME(_hx_pos_a8c2a3b9c8fe0cf3_47_addDependency,"app.model.DependencyModel","addDependency",0x7b0b88ca,"app.model.DependencyModel.addDependency","app/model/DependencyModel.hx",47,0xcfa8d514)
HX_LOCAL_STACK_FRAME(_hx_pos_a8c2a3b9c8fe0cf3_56_removeDependency,"app.model.DependencyModel","removeDependency",0x5beaee71,"app.model.DependencyModel.removeDependency","app/model/DependencyModel.hx",56,0xcfa8d514)
HX_LOCAL_STACK_FRAME(_hx_pos_a8c2a3b9c8fe0cf3_65_loadDependencies,"app.model.DependencyModel","loadDependencies",0x241d1571,"app.model.DependencyModel.loadDependencies","app/model/DependencyModel.hx",65,0xcfa8d514)
HX_LOCAL_STACK_FRAME(_hx_pos_a8c2a3b9c8fe0cf3_83_loadDependencyGraph,"app.model.DependencyModel","loadDependencyGraph",0xd7804bfb,"app.model.DependencyModel.loadDependencyGraph","app/model/DependencyModel.hx",83,0xcfa8d514)
HX_LOCAL_STACK_FRAME(_hx_pos_a8c2a3b9c8fe0cf3_93_getRootDirectory,"app.model.DependencyModel","getRootDirectory",0xbb9873b7,"app.model.DependencyModel.getRootDirectory","app/model/DependencyModel.hx",93,0xcfa8d514)
static const ::String _hx_array_data_275ec86c_8[] = {
	HX_("--show-toplevel",ff,07,73,f8),
};
static const ::String _hx_array_data_275ec86c_9[] = {
	HX_("rev-parse",89,52,b1,66),
};
namespace app{
namespace model{

void DependencyModel_obj::__construct(){
            	HX_STACKFRAME(&_hx_pos_a8c2a3b9c8fe0cf3_15_new)
HXLINE(  22)		this->dependencyGraph = null();
HXLINE(  20)		this->dependencies = null();
HXLINE(  18)		this->currentBranch = null();
HXLINE(  16)		this->JSON_FILE = HX_("git-dep.json",02,a8,e8,cf);
HXLINE(  26)		::String root = this->getRootDirectory();
HXLINE(  28)		if ((root.length > 0)) {
HXLINE(  29)			this->JSON_FILE = ((root + HX_("/.git/",7c,b0,99,8b)) + this->JSON_FILE);
            		}
HXLINE(  32)		this->loadDependencyGraph();
            	}

Dynamic DependencyModel_obj::__CreateEmpty() { return new DependencyModel_obj; }

void *DependencyModel_obj::_hx_vtable = 0;

Dynamic DependencyModel_obj::__Create(hx::DynamicArray inArgs)
{
	hx::ObjectPtr< DependencyModel_obj > _hx_result = new DependencyModel_obj();
	_hx_result->__construct();
	return _hx_result;
}

bool DependencyModel_obj::_hx_isInstanceOf(int inClassId) {
	return inClassId==(int)0x00000001 || inClassId==(int)0x0fb17296;
}

void DependencyModel_obj::save(){
            	HX_STACKFRAME(&_hx_pos_a8c2a3b9c8fe0cf3_37_save)
HXDLIN(  37)		::String _hx_tmp = this->JSON_FILE;
HXDLIN(  37)		 ::Dynamic replacer = null();
HXDLIN(  37)		::String space = null();
HXDLIN(  37)		::sys::io::File_obj::saveContent(_hx_tmp,::haxe::format::JsonPrinter_obj::print(this->dependencyGraph,replacer,space));
            	}


HX_DEFINE_DYNAMIC_FUNC0(DependencyModel_obj,save,(void))

::Array< ::String > DependencyModel_obj::getDependencies(){
            	HX_STACKFRAME(&_hx_pos_a8c2a3b9c8fe0cf3_42_getDependencies)
HXDLIN(  42)		return this->dependencies;
            	}


HX_DEFINE_DYNAMIC_FUNC0(DependencyModel_obj,getDependencies,return )

bool DependencyModel_obj::addDependency(::String dependency){
            	HX_STACKFRAME(&_hx_pos_a8c2a3b9c8fe0cf3_47_addDependency)
HXDLIN(  47)		if ((this->dependencies->indexOf(dependency,null()) == -1)) {
HXLINE(  48)			this->dependencies->push(dependency);
HXLINE(  49)			return true;
            		}
            		else {
HXLINE(  51)			return false;
            		}
HXLINE(  47)		return false;
            	}


HX_DEFINE_DYNAMIC_FUNC1(DependencyModel_obj,addDependency,return )

bool DependencyModel_obj::removeDependency(::String dependency){
            	HX_STACKFRAME(&_hx_pos_a8c2a3b9c8fe0cf3_56_removeDependency)
HXLINE(  57)		if ((this->dependencies->indexOf(dependency,null()) != -1)) {
HXLINE(  58)			return this->dependencies->remove(dependency);
            		}
HXLINE(  61)		return false;
            	}


HX_DEFINE_DYNAMIC_FUNC1(DependencyModel_obj,removeDependency,return )

void DependencyModel_obj::loadDependencies(::String branch){
            	HX_STACKFRAME(&_hx_pos_a8c2a3b9c8fe0cf3_65_loadDependencies)
HXLINE(  66)		if ((branch.length == 0)) {
HXLINE(  67)			HX_STACK_DO_THROW(HX_("A branch is required to be loaded.",67,b0,01,86));
            		}
HXLINE(  70)		if (::Reflect_obj::hasField(this->dependencyGraph,branch)) {
HXLINE(  71)			this->dependencies = ( (::Array< ::String >)(::Reflect_obj::field(this->dependencyGraph,branch)->__Field(HX_("deps",c4,5b,66,42),hx::paccDynamic)) );
HXLINE(  72)			this->currentBranch = branch;
            		}
            		else {
HXLINE(  74)			{
HXLINE(  74)				 ::Dynamic value =  ::Dynamic(hx::Anon_obj::Create(1)
            					->setFixed(0,HX_("deps",c4,5b,66,42),::Array_obj< ::String >::__new(0)));
HXDLIN(  74)				::Reflect_obj::setField(this->dependencyGraph,branch,value);
            			}
HXLINE(  75)			this->dependencies = ( (::Array< ::String >)(::Reflect_obj::field(this->dependencyGraph,branch)->__Field(HX_("deps",c4,5b,66,42),hx::paccDynamic)) );
HXLINE(  76)			this->currentBranch = branch;
HXLINE(  77)			this->save();
            		}
            	}


HX_DEFINE_DYNAMIC_FUNC1(DependencyModel_obj,loadDependencies,(void))

void DependencyModel_obj::loadDependencyGraph(){
            	HX_GC_STACKFRAME(&_hx_pos_a8c2a3b9c8fe0cf3_83_loadDependencyGraph)
HXDLIN(  83)		if (::sys::FileSystem_obj::exists(this->JSON_FILE)) {
HXLINE(  84)			 ::Dynamic fileDependencies =  ::haxe::format::JsonParser_obj::__alloc( HX_CTX ,::sys::io::File_obj::getContent(this->JSON_FILE))->doParse();
HXLINE(  85)			this->dependencyGraph = fileDependencies;
            		}
            		else {
HXLINE(  87)			this->dependencyGraph =  ::Dynamic(hx::Anon_obj::Create(0));
HXLINE(  88)			this->save();
            		}
            	}


HX_DEFINE_DYNAMIC_FUNC0(DependencyModel_obj,loadDependencyGraph,(void))

::String DependencyModel_obj::getRootDirectory(){
            	HX_GC_STACKFRAME(&_hx_pos_a8c2a3b9c8fe0cf3_93_getRootDirectory)
HXLINE(  94)		::String root = HX_("",00,00,00,00);
HXLINE(  96)		{
HXLINE(  96)			::Array< ::String > args = ::Array_obj< ::String >::fromData( _hx_array_data_275ec86c_8,1);
HXDLIN(  96)			 ::sys::io::Process process = null();
HXDLIN(  96)			process =  ::sys::io::Process_obj::__alloc( HX_CTX ,HX_("git",12,84,4e,00),::Array_obj< ::String >::fromData( _hx_array_data_275ec86c_9,1)->concat(args),null());
HXDLIN(  96)			{
HXLINE(  97)				root = process->_hx_stdout->readAll(null())->toString();
HXLINE(  98)				process->exitCode(null());
            			}
            		}
HXLINE( 101)		return ::StringTools_obj::trim(root);
            	}


HX_DEFINE_DYNAMIC_FUNC0(DependencyModel_obj,getRootDirectory,return )


hx::ObjectPtr< DependencyModel_obj > DependencyModel_obj::__new() {
	hx::ObjectPtr< DependencyModel_obj > __this = new DependencyModel_obj();
	__this->__construct();
	return __this;
}

hx::ObjectPtr< DependencyModel_obj > DependencyModel_obj::__alloc(hx::Ctx *_hx_ctx) {
	DependencyModel_obj *__this = (DependencyModel_obj*)(hx::Ctx::alloc(_hx_ctx, sizeof(DependencyModel_obj), true, "app.model.DependencyModel"));
	*(void **)__this = DependencyModel_obj::_hx_vtable;
	__this->__construct();
	return __this;
}

DependencyModel_obj::DependencyModel_obj()
{
}

void DependencyModel_obj::__Mark(HX_MARK_PARAMS)
{
	HX_MARK_BEGIN_CLASS(DependencyModel);
	HX_MARK_MEMBER_NAME(JSON_FILE,"JSON_FILE");
	HX_MARK_MEMBER_NAME(currentBranch,"currentBranch");
	HX_MARK_MEMBER_NAME(dependencies,"dependencies");
	HX_MARK_MEMBER_NAME(dependencyGraph,"dependencyGraph");
	HX_MARK_END_CLASS();
}

void DependencyModel_obj::__Visit(HX_VISIT_PARAMS)
{
	HX_VISIT_MEMBER_NAME(JSON_FILE,"JSON_FILE");
	HX_VISIT_MEMBER_NAME(currentBranch,"currentBranch");
	HX_VISIT_MEMBER_NAME(dependencies,"dependencies");
	HX_VISIT_MEMBER_NAME(dependencyGraph,"dependencyGraph");
}

hx::Val DependencyModel_obj::__Field(const ::String &inName,hx::PropertyAccess inCallProp)
{
	switch(inName.length) {
	case 4:
		if (HX_FIELD_EQ(inName,"save") ) { return hx::Val( save_dyn() ); }
		break;
	case 9:
		if (HX_FIELD_EQ(inName,"JSON_FILE") ) { return hx::Val( JSON_FILE ); }
		break;
	case 12:
		if (HX_FIELD_EQ(inName,"dependencies") ) { return hx::Val( dependencies ); }
		break;
	case 13:
		if (HX_FIELD_EQ(inName,"currentBranch") ) { return hx::Val( currentBranch ); }
		if (HX_FIELD_EQ(inName,"addDependency") ) { return hx::Val( addDependency_dyn() ); }
		break;
	case 15:
		if (HX_FIELD_EQ(inName,"dependencyGraph") ) { return hx::Val( dependencyGraph ); }
		if (HX_FIELD_EQ(inName,"getDependencies") ) { return hx::Val( getDependencies_dyn() ); }
		break;
	case 16:
		if (HX_FIELD_EQ(inName,"removeDependency") ) { return hx::Val( removeDependency_dyn() ); }
		if (HX_FIELD_EQ(inName,"loadDependencies") ) { return hx::Val( loadDependencies_dyn() ); }
		if (HX_FIELD_EQ(inName,"getRootDirectory") ) { return hx::Val( getRootDirectory_dyn() ); }
		break;
	case 19:
		if (HX_FIELD_EQ(inName,"loadDependencyGraph") ) { return hx::Val( loadDependencyGraph_dyn() ); }
	}
	return super::__Field(inName,inCallProp);
}

hx::Val DependencyModel_obj::__SetField(const ::String &inName,const hx::Val &inValue,hx::PropertyAccess inCallProp)
{
	switch(inName.length) {
	case 9:
		if (HX_FIELD_EQ(inName,"JSON_FILE") ) { JSON_FILE=inValue.Cast< ::String >(); return inValue; }
		break;
	case 12:
		if (HX_FIELD_EQ(inName,"dependencies") ) { dependencies=inValue.Cast< ::Array< ::String > >(); return inValue; }
		break;
	case 13:
		if (HX_FIELD_EQ(inName,"currentBranch") ) { currentBranch=inValue.Cast< ::String >(); return inValue; }
		break;
	case 15:
		if (HX_FIELD_EQ(inName,"dependencyGraph") ) { dependencyGraph=inValue.Cast<  ::Dynamic >(); return inValue; }
	}
	return super::__SetField(inName,inValue,inCallProp);
}

void DependencyModel_obj::__GetFields(Array< ::String> &outFields)
{
	outFields->push(HX_("JSON_FILE",33,d7,a6,6b));
	outFields->push(HX_("currentBranch",bb,7f,75,f6));
	outFields->push(HX_("dependencies",e9,d3,48,ac));
	outFields->push(HX_("dependencyGraph",83,e8,10,62));
	super::__GetFields(outFields);
};

#ifdef HXCPP_SCRIPTABLE
static hx::StorageInfo DependencyModel_obj_sMemberStorageInfo[] = {
	{hx::fsString,(int)offsetof(DependencyModel_obj,JSON_FILE),HX_("JSON_FILE",33,d7,a6,6b)},
	{hx::fsString,(int)offsetof(DependencyModel_obj,currentBranch),HX_("currentBranch",bb,7f,75,f6)},
	{hx::fsObject /* ::Array< ::String > */ ,(int)offsetof(DependencyModel_obj,dependencies),HX_("dependencies",e9,d3,48,ac)},
	{hx::fsObject /*  ::Dynamic */ ,(int)offsetof(DependencyModel_obj,dependencyGraph),HX_("dependencyGraph",83,e8,10,62)},
	{ hx::fsUnknown, 0, null()}
};
static hx::StaticInfo *DependencyModel_obj_sStaticStorageInfo = 0;
#endif

static ::String DependencyModel_obj_sMemberFields[] = {
	HX_("JSON_FILE",33,d7,a6,6b),
	HX_("currentBranch",bb,7f,75,f6),
	HX_("dependencies",e9,d3,48,ac),
	HX_("dependencyGraph",83,e8,10,62),
	HX_("save",3d,8b,4d,4c),
	HX_("getDependencies",9f,29,33,cf),
	HX_("addDependency",4c,60,12,01),
	HX_("removeDependency",2f,34,72,50),
	HX_("loadDependencies",2f,5b,a4,18),
	HX_("loadDependencyGraph",fd,b0,a8,4a),
	HX_("getRootDirectory",75,b9,1f,b0),
	::String(null()) };

hx::Class DependencyModel_obj::__mClass;

void DependencyModel_obj::__register()
{
	DependencyModel_obj _hx_dummy;
	DependencyModel_obj::_hx_vtable = *(void **)&_hx_dummy;
	hx::Static(__mClass) = new hx::Class_obj();
	__mClass->mName = HX_("app.model.DependencyModel",6c,c8,5e,27);
	__mClass->mSuper = &super::__SGetClass();
	__mClass->mConstructEmpty = &__CreateEmpty;
	__mClass->mConstructArgs = &__Create;
	__mClass->mGetStaticField = &hx::Class_obj::GetNoStaticField;
	__mClass->mSetStaticField = &hx::Class_obj::SetNoStaticField;
	__mClass->mStatics = hx::Class_obj::dupFunctions(0 /* sStaticFields */);
	__mClass->mMembers = hx::Class_obj::dupFunctions(DependencyModel_obj_sMemberFields);
	__mClass->mCanCast = hx::TCanCast< DependencyModel_obj >;
#ifdef HXCPP_SCRIPTABLE
	__mClass->mMemberStorageInfo = DependencyModel_obj_sMemberStorageInfo;
#endif
#ifdef HXCPP_SCRIPTABLE
	__mClass->mStaticStorageInfo = DependencyModel_obj_sStaticStorageInfo;
#endif
	hx::_hx_RegisterClass(__mClass->mName, __mClass);
}

} // end namespace app
} // end namespace model
